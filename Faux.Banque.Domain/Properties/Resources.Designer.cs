//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Faux.Banque.Domain.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Faux.Banque.Domain.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS
        /// &quot;EventStore&quot;.&quot;Events&quot; (
        ///id uuid,
        ///name varchar,
        ///version int,
        ///version_time_stamp timestamp,
        ///data blob,
        ///PRIMARY KEY(name,version_time_stamp, version ))
        ///WITH CLUSTERING ORDER BY (version_time_stamp ASC);.
        /// </summary>
        internal static string CreateEventsTable {
            get {
                return ResourceManager.GetString("CreateEventsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS
        ///&quot;EventStore&quot;.&quot;EventsToBeProcessed&quot; (
        ///id uuid,
        ///name varchar,
        ///version int,
        ///version_time_stamp timestamp,
        ///data blob,
        ///processed boolean,
        ///PRIMARY KEY(processed,version_time_stamp,name,version ))
        ///WITH CLUSTERING ORDER BY (version_time_stamp ASC, name DESC, version ASC);.
        /// </summary>
        internal static string CreateEventsToBeProcessedTable {
            get {
                return ResourceManager.GetString("CreateEventsToBeProcessedTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS
        ///&quot;EventStore&quot;.&quot;EventsVersionsToBeProcessed&quot;(
        ///version_time_stamp timestamp,
        ///processed boolean,
        ///PRIMARY KEY(version_time_stamp , processed));.
        /// </summary>
        internal static string CreateEventsVersionsToBeProcessedTable {
            get {
                return ResourceManager.GetString("CreateEventsVersionsToBeProcessedTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE KEYSPACE IF NOT EXISTS 
        ///&quot;EventStore&quot; WITH replication = 
        ///{&apos;class&apos;:&apos;SimpleStrategy&apos;, &apos;replication_factor&apos;:3};.
        /// </summary>
        internal static string CreateKeyspace {
            get {
                return ResourceManager.GetString("CreateKeyspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP KEYSPACE &quot;EventStore&quot;;.
        /// </summary>
        internal static string Drop {
            get {
                return ResourceManager.GetString("Drop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT	version 
        ///FROM	&quot;EventStore&quot;.&quot;Events&quot;
        ///WHERE name = &apos;{0}&apos;;.
        /// </summary>
        internal static string GetVersionForGivenKey {
            get {
                return ResourceManager.GetString("GetVersionForGivenKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * 
        ///FROM    &quot;EventStore&quot;.&quot;Events&quot;
        ///WHERE version_time_stamp  &gt; {0} LIMIT {1} ALLOW FILTERING;.
        /// </summary>
        internal static string ReadRecordsByDataStamp {
            get {
                return ResourceManager.GetString("ReadRecordsByDataStamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * 
        ///FROM	&quot;EventStore&quot;.&quot;Events&quot;
        ///WHERE name = &apos;{0}&apos; LIMIT {1};.
        /// </summary>
        internal static string ReadRecordsByKey {
            get {
                return ResourceManager.GetString("ReadRecordsByKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRUNCATE TABLE &quot;EventStore&quot;.&quot;Events&quot;;.
        /// </summary>
        internal static string TruncateEvents {
            get {
                return ResourceManager.GetString("TruncateEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRUNCATE TABLE &quot;EventStore&quot;.&quot;EventsToBeProcessed&quot;;.
        /// </summary>
        internal static string TruncateEventsToBeProcessed {
            get {
                return ResourceManager.GetString("TruncateEventsToBeProcessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TRUNCATE TABLE &quot;EventStore&quot;.&quot;EventsVersionsToBeProcessed&quot;.
        /// </summary>
        internal static string TruncateEventsVersionsToBeProcessed {
            get {
                return ResourceManager.GetString("TruncateEventsVersionsToBeProcessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  version_time_stamp, 
        ///        processed 
        ///FROM &quot;EventStore&quot;.&quot;EventsVersionsToBeProcessed&quot; LIMIT 1;.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
